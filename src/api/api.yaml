openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://virtserver.swaggerhub.com/KONDO_1/akapen-api-reference/1.0.0
    description: SwaggerHub API Auto Mocking
paths:
  /category:
    get:
      tags:
        - akapen
      summary: 問題カテゴリを検索
      description: |
        問題カテゴリを検索します
      operationId: searchCategories
      parameters:
        - name: searchString
          in: query
          description: pass an optional search string for looking up inventory
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: skip
          in: query
          description: number of records to skip for pagination
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: limit
          in: query
          description: maximum number of records to return
          required: false
          style: form
          explode: true
          schema:
            maximum: 50
            minimum: 0
            type: integer
            format: int32
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryGetResponse'
        '400':
          description: bad input parameter
  /question:
    get:
      tags:
        - akapen
      summary: 問題を検索
      description: |
        問題カテゴリを検索します
      operationId: searchQuestions
      parameters:
        - name: mode
          in: query
          description: 検索モードの指定
          required: true
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryGetResponse'
        '400':
          description: bad input parameter
  /user/answer:
    post:
      tags:
        - akapen
      summary: ユーザーの回答を送信
      description: |
        ユーザーが問題に対する回答を送信します
      operationId: postUserAnswers
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAnswerPostRequest'
      responses:
        '201':
          description: item created
  /user/practice/history:
    get:
      tags:
        - akapen
      summary: ユーザーの学習済みカテゴリーの検索
      description: |
        ユーザーの学習済みカテゴリーの検索
      operationId: getUserPracticeHistory
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryGetResponse'
        '400':
          description: bad input parameter
  /user/practice/score:
    get:
      tags:
        - akapen
      summary: ユーザーのスコアを取得
      description: |
        該当するカテゴリーIDに紐づく問題のユーザーのスコアを取得します
      operationId: getUserPracticeScore
      parameters:
        - name: categoryId
          in: query
          description: カテゴリーID
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPracticeScoreGetResponse'
        '400':
          description: bad input parameter
  /timer/initiation:
    post:
      tags:
        - akapen
      summary: ユーザーの回答開始時刻を登録
      description: |
        ユーザーの回答開始時刻を登録
      operationId: postUserAnswerTime
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAnswerTimePostRequest'
      responses:
        '201':
          description: item created
components:
  schemas:
    UserAnswerPostRequest:
      required:
        - answer
        - questionId
      type: object
      properties:
        questionId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        answer:
          type: string
          example: EC2 は AWS が提供する仮想サーバーのサービスです
    UserAnswerTimePostRequest:
      required:
        - questionId
      type: object
      properties:
        questionId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
    CategoryGetResponse:
      required:
        - categoryId
        - categoryName
        - level
      type: object
      properties:
        categoryId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        categoryName:
          type: string
          example: Widget Adapter
        level:
          type: integer
          example: 1
    UserPracticeHistoryGetResponse:
      required:
        - categoryId
        - categoryName
        - level
      type: object
      properties:
        categoryId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        categoryName:
          type: string
          example: Widget Adapter
        level:
          type: integer
          example: 1
    UserPracticeScoreGetResponse:
      required:
        - questionId
        - questionText
        - score
        - scoreDistribution
      type: object
      properties:
        questionId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        questionText:
          type: string
          example: Widget Adapter
        score:
          type: number
          example: 95.5
        scoreDistribution:
          type: array
          items:
            $ref: '#/components/schemas/UserPracticeScoreGetResponseItem'
    UserPracticeScoreGetResponseItem:
      required:
        - bin
        - count
      type: object
      properties:
        bin:
          type: string
          example: 70-75
        count:
          type: number
          example: 0.3
